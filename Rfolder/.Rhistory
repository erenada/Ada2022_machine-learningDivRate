lnl <- tess.likelihood(true_tree_times,
lambda = true_ME_speciation,
mu = true_ME_extinction,
massExtinctionTimes = true_time,
massExtinctionSurvivalProbabilities = survivalProbability,
samplingProbability = 1.0,
log = T)
return(lnl)
}
true_samplesMassExtinctionBD <- tess.mcmc(likelihoodFunction = true_ME_likelihoodMassExtinctionBD,
priors = true_ME_priorsMassExtinctionBD,
parameters = c(runif(2,0,1),max(times)*3/4),
logTransforms = c(TRUE,TRUE,FALSE),
delta = c(1,1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
summary(samplesMassExtinctionBD)
plot(samplesMassExtinctionBD)
true_marginalLikelihoodConstBD <- tess.steppingStoneSampling(
likelihoodFunction = true_tree_likelihoodConstBD,
priors = true_priorsConstBD,
parameters = runif(2,0,1),
logTransforms = c(TRUE,TRUE),
iterations = 1000,
burnin = 100,
K = 50)
marginalLikelihoodDecrBD <- tess.steppingStoneSampling(
likelihoodFunction = true_decr_likelihoodDecrBD,
priors = true_decr_priorsDecrBD,
parameters = runif(3,0,1),
logTransforms = c(TRUE,TRUE,TRUE),
iterations = 1000,
burnin = 100,
K = 50)
marginalLikelihoodEpisodicBD <- tess.steppingStoneSampling(
likelihoodFunction = true_samplesEpisodicBD,
priors = true_priorsEpisodicBD,
parameters = runif(4,0,1),
logTransforms = c(TRUE,TRUE,TRUE,TRUE),
iterations = 1000,
burnin = 100,
K = 50)
marginalLikelihoodEpisodicBD <- tess.steppingStoneSampling(
likelihoodFunction = true_samplesEpisodicBD,
priors = true_priorsEpisodicBD,
parameters = runif(4,0,1),
logTransforms = c(TRUE,TRUE,TRUE,TRUE),
iterations = 1000,
burnin = 100,
K = 50)
library(TESS)
marginalLikelihoodEpisodicBD <- tess.steppingStoneSampling(
likelihoodFunction = true_likelihoodEpisodicBD,
priors = true_priorsEpisodicBD,
parameters = runif(4,0,1),
logTransforms = c(TRUE,TRUE,TRUE,TRUE),
iterations = 1000,
burnin = 100,
K = 50)
candidateModels <- c("ConstBD"=true_marginalLikelihoodConstBD,
"DecrBD"=marginalLikelihoodDecrBD,
"EpisodicBD"=marginalLikelihoodEpisodicBD,
"MassExtinctionBD"=marginalLikelihoodMassExtinctionBD)
marginalLikelihoodGrid <- expand.grid(M0=names(candidateModels),
M1=names(candidateModels))
marginalLikelihoodGrid$BF <- 2 * (candidateModels[marginalLikelihoodGrid$M0] - candidateModels[marginalLikelihoodGrid$M1])
marginalLikelihoodGrid <- marginalLikelihoodGrid[order(marginalLikelihoodGrid$BF, decreasing=TRUE),]
marginalLikelihoodGrid
plot(true_tree_object)
best800tree <- read.tree("../UltrametricTrees/Dataset1/inference_fong_best800.txt.treefile")
plot(best800tree)
plot(true_tree_object)
inferred_tree_object <- read.tree("../UltrametricTrees/Dataset1/inferenceTest.treefile")
plot(inferred_tree_object)
plot(inferred_tree_object)
plot(true_tree_object)
inferred_tree_times <- as.numeric( branching.times(inferred_tree_object) )
inferred_prior_delta <- function(x) { dexp(x,rate=10.0,log=TRUE) }
inferred_prior_tau <- function(x) { dexp(x,rate=10.0,log=TRUE) }
plot(true_tree_object)
is.ultrametric(inferred_tree_object)
inferred_tree_times <- as.numeric( branching.times(inferred_tree_object) )
inferred_prior_delta <- function(x) { dexp(x,rate=10.0,log=TRUE) }
inferred_prior_tau <- function(x) { dexp(x,rate=10.0,log=TRUE) }
inferred_priorsConstBD <- c("diversification"=inferred_prior_delta,
"turnover"=inferred_prior_tau)
inferred_tree_likelihoodConstBD <- function(params) { speciation <- params[1] + params[2]
extinction <- params[2]
lnl <- tess.likelihood(inferred_tree_times,
lambda = speciation,
mu = extinction,
samplingProbability = 1.0,
log = TRUE)
return(lnl)
}
inferred_tree_samplesConstBD <- tess.mcmc(likelihoodFunction = inferred_tree_likelihoodConstBD,
priors = inferred_priorsConstBD,
parameters = runif(2,0,1),
logTransforms = c(TRUE,TRUE),
delta = c(1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
summary(inferred_tree_samplesConstBD)
plot(inferred_tree_samplesConstBD)
inferred_decr_prior_lambda <- function(x) { dexp(x,rate=10.0,log=TRUE) }
inferred_decr_prior_alpha <- function(x) { dexp(x,rate=0.1,log=TRUE) }
inferred_decr_prior_delta <- function(x) { dexp(x,rate=0.1,log=TRUE) }
inferred_decr_prior_lambda <- function(x) { dexp(x,rate=10.0,log=TRUE) }
inferred_decr_prior_alpha <- function(x) { dexp(x,rate=0.1,log=TRUE) }
inferred_decr_priorsDecrBD <- c("turnover"=inferred_decr_prior_delta,
"initial speciation"=inferred_decr_prior_lambda,
"speciation decay"=inferred_decr_prior_alpha)
inferred_decr_likelihoodDecrBD <- function(params) {
speciation <- function(t) params[1] + params[2] * exp(-params[3]*t)
extinction <- function(t) params[1]
lnl <- tess.likelihood(inferred_tree_times,
lambda = speciation,
mu = extinction,
samplingProbability = 1.0,
log = TRUE)
return(lnl)
}
inferred_decr_samplesDecrBD <- tess.mcmc(likelihoodFunction = inferred_decr_likelihoodDecrBD,
priors = inferred_decr_priorsDecrBD,
parameters = runif(3,0,1),
logTransforms = c(TRUE,TRUE,TRUE),
delta = c(1,1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
library(ape)
library(phangorn)
library(dplyr)
library(TESS)
input_dir <- "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees"
out_dir <- "/Users/eren/Documents/GitHub/Chapter3/outdir"
list.files(input_dir)
for(dataset in list.files(input_dir)){
for(tree in ldataset){
print(paste(dataset,tree,sep = ""))
}
}
for(dataset in list.files(input_dir)){
for(tree in dataset){
print(paste(dataset,tree,sep = ""))
}
}
for(dataset in list.files(input_dir)){
for(tree in list.files(dataset)){
print(paste(dataset,tree,sep = ""))
}
}
for(dataset in list.files(input_dir)){
for(tree in list.files(dataset)){
print(paste(dataset,tree,sep = ""))
}
}
for(dataset in list.files(input_dir)){
print(paste(dataset))
}
test_input_dir <- "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1"
out_dir <- "/Users/eren/Documents/GitHub/Chapter3/outdir"
for(tree in list.files(test_input_dir)){
print(paste(tree))
}
model <- "Dataset1"
for(tree in list.files(test_input_dir)){
print(paste(tree))
tree_object <- read.tree(paste(input_dir,model,tree, sep = ""))
}
test_input_dir <- "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/"
for(tree in list.files(test_input_dir)){
print(paste(tree))
tree_object <- read.tree(paste(input_dir,tree, sep = ""))
}
list.files(test_input_dir)
(paste(input_dir,tree, sep = "")
paste(input_dir,tree, sep = "")
for(tree in list.files(test_input_dir)){
print(paste(tree))
tree_object <- read.tree(paste(test_input_dir,tree, sep = ""))
}
tree_object <- read.tree(paste(test_input_dir,tree, sep = ""))
times <- ass.numeric(branching.times(tree_object))
times <- as.numeric(branching.times(tree_object))
prior_delta <- function(x) { dexp(x,rate=10.0,log=TRUE) }
prior_tau <- function(x) { dexp(x,rate=10.0,log=TRUE) }
priorsConstBD <- c("diversification"=prior_delta,
"turnover"=prior_tau)
likelihoodConstBD <- function(params) {
speciation <- params[1] + params[2]
extinction <- params[2]
lnl <- tess.likelihood(times,
lambda = speciation,
mu = extinction,
samplingProbability = 1.0,
log = TRUE)
return(lnl)
}
samplesConstBD <- tess.mcmc(likelihoodFunction = likelihoodConstBD,
priors = priorsConstBD,
parameters = runif(2,0,1),
logTransforms = c(TRUE,TRUE),
delta = c(1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
tree_data_sets <- c(list.files(output_dir)) # char or list??
output_dir <- "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees"
tree_data_sets <- c(list.files(output_dir)) # char or list??
tree_data_sets <- c(list.files(output_dir)) # char or list??
output_dir <- "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees"
tree_data_sets <- c(list.files(output_dir)) # char or list??
paste(input_dir,"Dataset1",sep = "/")
input_dir <- "/Users/eren/Documents/GitHub/Chapter3/AlexTrees"
test_input_dir <- "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/"
tree_object <- read.tree(paste(test_input_dir,tree, sep = ""))
test_tree <- read.tree("../UltrametricTrees/Dataset1/s_tree.trees")
is.ultrametric(test_tree)
View(test_tree)
test_tree <- chronoMPL(test_tree)
View(test_tree)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset2/inference_wickett_best600.txt.treefile")
is.ultrametric(dataset1Tree)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset2/s_tree.trees")
View(dataset1Tree)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1s_tree.trees")
dataset2Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset2/s_tree.trees")
dataset3Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset3/s_tree.trees")
dataset4Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset4/s_tree.trees")
dataset1Tree<- chronotree <- chronoMPL(dataset1Tree)
View(dataset1Tree)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1s_tree.trees")
dataset1Tree <- chronoMPL(dataset1Tree)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1s_tree.trees")
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
View(dataset1Tree)
dataset1Tree <- chronoMPL(dataset1Tree)
View(dataset1Tree)
dataset2Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset2/s_tree.trees")
dataset3Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset3/s_tree.trees")
dataset4Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset4/s_tree.trees")
dataset1Tree <- chronoMPL(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
dataset1Tree <- chronoMPL(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees"))
dataset1Tree <- chronoMPL(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees"))
dataset1Tree <- chronoMPL(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees"))
View(dataset1Tree)
dataset1Tree <- chronoMPL(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees"))
write.tree(dataset1Tree, file = "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
dataset1Tree <- chronoMPL(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees"))
write.tree(dataset1Tree, file = "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
dataset1Tree <- chronoMPL(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees"))
View(dataset1Tree)
dataset1Tree[["edge.length"]]
tree_object <- dataset1Tree
times <- as.numeric(branching.times(tree_object))
prior_delta <- function(x) { dexp(x,rate=10.0,log=TRUE) }
prior_tau <- function(x) { dexp(x,rate=10.0,log=TRUE) }
priorsConstBD <- c("diversification"=prior_delta,
"turnover"=prior_tau)
likelihoodConstBD <- function(params) {
speciation <- params[1] + params[2]
extinction <- params[2]
lnl <- tess.likelihood(times,
lambda = speciation,
mu = extinction,
samplingProbability = 1.0,
log = TRUE)
return(lnl)
}
#samples for constBD
samplesConstBD <- tess.mcmc(likelihoodFunction = likelihoodConstBD,
priors = priorsConstBD,
parameters = runif(2,0,1),
logTransforms = c(TRUE,TRUE),
delta = c(1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
dataset1Tree
View(dataset1Tree)
dataset1Tree <- chronoMPL(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees"))
dataset1Tree
View(dataset1Tree)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
View(dataset1Tree)
test_1 <- chronopl(dataset1Tree)
test_1 <- chronopl(dataset1Tree, lambda = 1)
View(test_1)
times <- as.numeric(branching.times(test_1))
prior_delta <- function(x) { dexp(x,rate=10.0,log=TRUE) }
prior_tau <- function(x) { dexp(x,rate=10.0,log=TRUE) }
priorsConstBD <- c("diversification"=prior_delta,
"turnover"=prior_tau)
likelihoodConstBD <- function(params) {
speciation <- params[1] + params[2]
extinction <- params[2]
lnl <- tess.likelihood(times,
lambda = speciation,
mu = extinction,
samplingProbability = 1.0,
log = TRUE)
return(lnl)
}
samplesConstBD <- tess.mcmc(likelihoodFunction = likelihoodConstBD,
priors = priorsConstBD,
parameters = runif(2,0,1),
logTransforms = c(TRUE,TRUE),
delta = c(1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
summary(inferred_tree_samplesConstBD)
summary(samplesConstBD)
summary(samplesConstBD)
write.csv(samplesConstBD, file = "/Users/eren/Documents/GitHub/Chapter3/outdir/Dataset1/summaryConstBD.csv")
summary(samplesConstBD)
plot(samplesConstBD)
test_2 <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/inferenceTest.treefile")
View(test_2)
times <- as.numeric(branching.times(test_2))
prior_delta <- function(x) { dexp(x,rate=10.0,log=TRUE) }
prior_tau <- function(x) { dexp(x,rate=10.0,log=TRUE) }
priorsConstBD <- c("diversification"=prior_delta,
"turnover"=prior_tau)
likelihoodConstBD <- function(params) {
speciation <- params[1] + params[2]
extinction <- params[2]
lnl <- tess.likelihood(times,
lambda = speciation,
mu = extinction,
samplingProbability = 1.0,
log = TRUE)
return(lnl)
}
samplesConstBD <- tess.mcmc(likelihoodFunction = likelihoodConstBD,
priors = priorsConstBD,
parameters = runif(2,0,1),
logTransforms = c(TRUE,TRUE),
delta = c(1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
plot(samplesConstBD)
summary(samplesConstBD)
plot(samplesConstBD)
summary(samplesConstBD)
as.data.frame(samplesConstBD)
samples_data_frame <-  as.data.frame(samplesConstBD)
View(samples_data_frame)
View(samples_data_frame)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- chronoMPL(dataset1Tree, lambda = 1)
dataset1Tree <- chronopl(read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees"),lambda=1)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
is.binary(dataset1Tree)
dataset1Tree
View(dataset1Tree)
dataset1Tree[["edge.length"]]
dataset1Tree <-
#write.tree(dataset1Tree, file = "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- chronopl(dataset1Tree, lambda = 0)
test_1 <- chronopl(dataset1Tree, lambda = 0)
View(dataset1Tree)
View(dataset1Tree)
View(test_1)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
View(dataset1Tree)
test_1 <- chronopl(dataset1Tree, lambda = 0)
View(test_1)
View(dataset1Tree)
View(test_1)
test_2 <- chronopl(dataset1Tree, lambda = 1)
View(test_2)
dataset1Tree <- root(dataset1Tree, outgroup="5", resolve.root=T)
View(dataset1Tree)
test_1 <- chronopl(dataset1Tree, lambda = 0)
test_2 <- chronopl(dataset1Tree, lambda = 1)
View(test_1)
View(test_2)
View(dataset1Tree)
View(test_1)
View(test_2)
View(test_1)
test_1 <- chronopl(dataset1Tree, S = 10000)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- chronoMPL(dataset1Tree)
View(dataset1Tree)
View(test_1)
View(dataset1Tree)
View(test_1)
View(test_1)
View(dataset1Tree)
library(geiger)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- rescale(dataset1Tree,model = "depth")
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- rescale(dataset1Tree,model = "depth",lambda =1)
test_1 <- rescale(dataset1Tree,lambda =1)
library(geiger)
test_1 <- rescale(dataset1Tree)
test_1 <- rescaleTree(dataset1Tree, model = "depth")
test_2 <- chronopl(dataset1Tree, lambda = 1)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- rescaleTree(dataset1Tree, model = "depth")
test_1 <- rescaleTree(dataset1Tree)
test_1 <- rescale(dataset1Tree)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- rescale(dataset1Tree)
test_1 <- rescale(dataset1Tree, model = "depth")
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- rescale(dataset1Tree, model = "depth")
rescale(dataset1Tree, model = "depth")
test_1 <- rescale(dataset1Tree, model = c("depth"))
test_1
rescale(dataset1Tree, model = c("depth"))
library(geiger)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
View(dataset1Tree)
test_1 <- rescale(dataset1Tree, model = c("depth"), lambda = 1)
test_1 <- rescale(dataset1Tree, model = c("depth"))
test_1 <- rescale(dataset1Tree)
dataset1Tree <- test_1
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
test_1 <- rescale(dataset1Tree, model = "depth", lambda = 1)
test_1 <- rescale(dataset1Tree, lambda = 1,  model = "depth")
test_1 <- rescale(dataset1Tree, lambda = 1,  model = c("depth")0
test_1 <- rescale(dataset1Tree, lambda = 1,  model = c("depth"))
test_1 <- rescale(dataset1Tree, depth)
test_1 <- rescale(dataset1Tree, "depth")
test_1 <- rescale(dataset1Tree, lambda, 1)
test_1 <- rescale(dataset1Tree, "depth", 1)
View(test_1)
View(dataset1Tree)
View(test_1)
View(dataset1Tree)
View(test_1)
View(dataset1Tree)
View(test_1)
View(dataset1Tree)
View(test_1)
test_1 <- rescale(dataset1Tree, "depth", 1)
dataset1Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
dataset1Tree <- rescale(dataset1Tree, "depth", 1)
write.tree(dataset1Tree, file = "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
dataset2Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset2/s_tree.trees")
dataset2Tree <- rescale(dataset2Tree, "depth", 1)
write.tree(dataset2Tree, file = "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset2/s_tree.trees")
1
write.tree(dataset2Tree, file = "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset1/s_tree.trees")
dataset3Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset3/s_tree.trees")
dataset3Tree <- rescale(dataset3Tree, "depth", 1)
write.tree(dataset3Tree, file = "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset3/s_tree.trees")
dataset4Tree <- read.tree("/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset4/s_tree.trees")
dataset4Tree <- rescale(dataset4Tree, "depth", 1)
write.tree(dataset4Tree, file = "/Users/eren/Documents/GitHub/Chapter3/UltrametricTrees/Dataset4/s_tree.trees")
test_tree <- dataset1Tree
times <- as.numeric(branching.times(test_tree))
prior_delta <- function(x) { dexp(x,rate=10.0,log=TRUE) }
prior_tau <- function(x) { dexp(x,rate=10.0,log=TRUE) }
priorsConstBD <- c("diversification"=prior_delta,
"turnover"=prior_tau)
likelihoodConstBD <- function(params) {
speciation <- params[1] + params[2]
extinction <- params[2]
lnl <- tess.likelihood(times,
lambda = speciation,
mu = extinction,
samplingProbability = 1.0,
log = TRUE)
return(lnl)
}
#samples for constBD
samplesConstBD <- tess.mcmc(likelihoodFunction = likelihoodConstBD,
priors = priorsConstBD,
parameters = runif(2,0,1),
logTransforms = c(TRUE,TRUE),
delta = c(1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
summary(samplesConstBD)
plot(samplesConstBD)
samplesConstBD
summary(samplesConstBD)
sum_ConstBD <- summary(samplesConstBD)
write.table(sum_ConstBD, file = "/Users/eren/Documents/GitHub/Chapter3/outdir/Dataset1/sum_ConstantBD")
write.csv(sum_ConstBD, file = "/Users/eren/Documents/GitHub/Chapter3/outdir/Dataset1/sum_ConstantBD")
samplesConstBD
summary(samplesConstBD)
write.csv(summary(samplesConstBD))
summary(samplesConstBD)
