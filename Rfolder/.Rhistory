mu = DecrBD_extinction,
samplingProbability = 1.0,
log = TRUE)
return (lnl)
}
samplesDecrBD <- tess.mcmc(likelihoodFunction = likelihoodDecrBD,
priors = priorsDecrBD,
parameters = runif(3,0,1),
logTransforms = c(TRUE,TRUE,TRUE),
delta = c(1,1,1),
iterations = 1000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
tmrca <- max( times )
simDecrBD <- function(params) {
DecrBD_speciation <- function(t) params[1] + params[2] * exp(-params[3]*t)
DecrBD_xtinction <- function(t) params[1]
repeat {
DecrBD_tree <- tess.sim.age(n = 1,
age = tmrca,
lambda = DecrBD_speciation,
mu = DecrBD_extinction,
samplingProbability = 1.0,
MRCA = TRUE)[[1]]
if (DecrBD_tree$Nnode > 1) break }
return (DecrBD_tree) }
treesDecrBD <- tess.PosteriorPrediction(simDecrBD,samplesDecrBD)
simDecrBD <- function(params) {
DecrBD_speciation <- function(t) params[1] + params[2] * exp(-params[3]*t)
DecrBD_extinction <- function(t) params[1]
repeat {
DecrBD_tree <- tess.sim.age(n = 1,
age = tmrca,
lambda = DecrBD_speciation,
mu = DecrBD_extinction,
samplingProbability = 1.0,
MRCA = TRUE)[[1]]
if (DecrBD_tree$Nnode > 1) break }
return (DecrBD_tree) }
treesDecrBD <- tess.PosteriorPrediction(simDecrBD,samplesDecrBD)
# compute the number of species in each simulate DecrBD_tree
numTaxaDecrBD <- c()
for (i in 1:length(treesDecrBD)){
numTaxaDecrBD[i] <- treesDecrBD[[i]]$Nnode + 1 }
numTaxaPPDI_DecrBD <- quantile(numTaxaDecrBD,prob=c(0.025,0.975))
observedGamma <- gammaStat(tree_object)
DecrBD_ppt <- tess.PosteriorPredictiveTest(treesDecrBD,tree_object,
gammaStat)
DecrBD_gammaPPDI <- quantile(DecrBD_ppt[[1]],prob=c(0.025,0.975))
pdf(paste(out_dir,"/",dataset,"/","plot_PPD_",DecrBD_tree,"_PPD_samplesDecrBD1.pdf", sep=""),height=6,width=18)
par(mfrow=c(1,3))
pdf(paste(out_dir,"/",dataset,"/","plot_PPD_",tree,"_PPD_samplesDecrBD1.pdf", sep=""),height=6,width=18)
par(mfrow=c(1,3))
plot(density(numTaxaDecrBD),main="Number of taxa",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=numTaxaPPDI_DecrBD,lty=2,col="gray",lwd=2) +
points(tree_object$Nnode+1,0,pch="x") + title(sub = "(A)", xlab = "Frequency")
ltt.plot(treesDecrBD[[1]],backward=FALSE,col="gray",log="y",
ylim=c(1,max(200)),main="LTT-plot") + ltt.lines(tree_object,backward=FALSE,lwd=3) +
for (i in 2:min(100,length(treesDecrBD))) ltt.lines(treesDecrBD[[i]], backward=FALSE, col="gray") + title(sub = "(B)")
plot(density(ppt[[1]]),main="Gamma Statistic",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=DecrBD_gammaPPDI,lty=2,col="gray",lwd=2) +
points(observedGamma,0,pch="x") + title(sub = "(C)", xlab = "Gamma Value")
dev.off()
tmrca <- max( times )
simConstBD <- function(params) {
ConstBD_speciation <- params[1] + params[2]
ConstBD_extinction <- params[2]
repeat {
ConstBD_tree <- tess.sim.age(n = 1,
age = tmrca,
lambda = ConstBD_speciation,
mu = ConstBD_extinction,
samplingProbability = 1.0,
MRCA = TRUE)[[1]]
if (ConstBD_tree$Nnode > 1) break }
return (ConstBD_tree) }
treesConstBD <- tess.PosteriorPrediction(simConstBD,samplesConstBD)
# compute the number of species in each simulate ConstBD_tree
numTaxaConstBD <- c()
for (i in 1:length(treesConstBD)){
numTaxaConstBD[i] <- treesConstBD[[i]]$Nnode + 1 }
numTaxaPPDI_ConstBD <- quantile(numTaxaConstBD,prob=c(0.025,0.975))
observedGamma <- gammaStat(tree_object)
ConstBD_ppt <- tess.PosteriorPredictiveTest(treesConstBD,tree_object,
gammaStat)
ConstBD_gammaPPDI <- quantile(ConstBD_ppt[[1]],prob=c(0.025,0.975))
pdf(paste(out_dir,"/",dataset,"/","plot_PPD_",tree,"_PPD_samplesConstBD.pdf", sep=""),height=6,width=18)
par(mfrow=c(1,3))
plot(density(numTaxaConstBD),main="Number of taxa",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=numTaxaPPDI_ConstBD,lty=2,col="gray",lwd=2) +
points(tree_object$Nnode+1,0,pch="x") + title(sub = "(A)", xlab = "Frequency")
ltt.plot(ConstBD_treesConstBD[[1]],backward=FALSE,col="gray",log="y",
ylim=c(1,max(200)),main="LTT-plot") + ltt.lines(tree_object,backward=FALSE,lwd=3) +
for (i in 2:min(100,length(treesConstBD))) ltt.lines(treesConstBD[[i]], backward=FALSE, col="gray") + title(sub = "(B)")
pdf(paste(out_dir,"/",dataset,"/","plot_PPD_",tree,"_PPD_samplesConstBD.pdf", sep=""),height=6,width=18)
par(mfrow=c(1,3))
plot(density(numTaxaConstBD),main="Number of taxa",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=numTaxaPPDI_ConstBD,lty=2,col="gray",lwd=2) +
points(tree_object$Nnode+1,0,pch="x") + title(sub = "(A)", xlab = "Frequency")
ltt.plot(treesConstBD[[1]],backward=FALSE,col="gray",log="y",
ylim=c(1,max(200)),main="LTT-plot") + ltt.lines(tree_object,backward=FALSE,lwd=3) +
for (i in 2:min(100,length(treesConstBD))) ltt.lines(treesConstBD[[i]], backward=FALSE, col="gray") + title(sub = "(B)")
plot(density(ppt[[1]]),main="Gamma Statistic",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=ConstBD_gammaPPDI,lty=2,col="gray",lwd=2) +
points(observedGamma,0,pch="x") + title(sub = "(C)", xlab = "Gamma Value")
dev.off()
marginalLikelihoodGrid
rateChangeTime <- max( times ) / 2
EpisodicBD_prior_delta_before <- function(x) { dexp(x,rate=10.0,log=TRUE) }
EpisodicBD_prior_tau_before <- function(x) { dexp(x,rate=10.0,log=TRUE) }
EpisodicBD_prior_delta_after <- function(x) { dexp(x,rate=10.0,log=TRUE) }
EpisodicBD_prior_tau_after <- function(x) { dexp(x,rate=10.0,log=TRUE) }
priorsEpisodicBD <- c("diversification before"=EpisodicBD_prior_delta_before,
"turnover before"=EpisodicBD_prior_tau_before,
"diversification after"=EpisodicBD_prior_delta_after,
"turnover after"=EpisodicBD_prior_tau_after)
likelihoodEpisodicBD <- function(params) {
EpisodicBD_speciation <- c(params[1]+params[2],params[3]+params[4])
EpisodicBD_extinction <- c(params[2],params[4])
lnl <- tess.likelihood.rateshift(times,
lambda = EpisodicBD_speciation,
mu = EpisodicBD_extinction,
rateChangeTimesLambda = rateChangeTime,
rateChangeTimesMu = rateChangeTime,
samplingProbability = 1.0,
log = TRUE)
return(lnl)
}
samplesEpisodicBD <- tess.mcmc(likelihoodFunction = likelihoodEpisodicBD,
priors = priorsEpisodicBD,
parameters = runif(4,0,1),
logTransforms = c(TRUE,TRUE,TRUE,TRUE),
delta = c(1,1,1,1),
iterations = 10000,
burnin = 1000,
thinning = 10,
adaptive = TRUE,
verbose = TRUE)
simEpisodicBD <- function(params) {
EpisodicBD_speciation <- c(params[1]+params[2],params[3]+params[4])
EpisodicBD_extinction <- c(params[2],params[4])
repeat {
EpisodicBD_tree <- tess.sim.age(n = 1,
age = tmrca,
lambda = EpisodicBD_speciation,
mu = EpisodicBD_extinction,
samplingProbability = 1.0,
MRCA = TRUE)[[1]]
if (EpisodicBD_tree$Nnode > 1) break }
return (EpisodicBD_tree) }
treesEpisodicBD <- tess.PosteriorPrediction(simEpisodicBD,samplesEpisodicBD)
warnings()
simEpisodicBD <- function(params) {
EpisodicBD_speciation <- c(params[1]+params[2],params[3]+params[4])
EpisodicBD_extinction <- c(params[2],params[4])
repeat {
EpisodicBD_tree <- tess.sim.age(n = 1,
age = tmrca,
lambda = EpisodicBD_speciation,
mu = EpisodicBD_extinction,
samplingProbability = 1.0,
MRCA = TRUE)[[1]]
if (EpisodicBD_tree$Nnode > 1) break }
return (EpisodicBD_tree) }
treesEpisodicBD <- tess.PosteriorPrediction(simEpisodicBD,samplesEpisodicBD)
# compute the number of species in each simulate EpisodicBD_tree
numTaxaEpisodicBD <- c()
for (i in 1:length(treesEpisodicBD)){
numTaxaEpisodicBD[i] <- treesEpisodicBD[[i]]$Nnode + 1 }
numTaxaPPDI_EpisodicBD <- quantile(numTaxaEpisodicBD,prob=c(0.025,0.975))
observedGamma <- gammaStat(tree_object)
EpisodicBD_ppt <- tess.PosteriorPredictiveTest(treesEpisodicBD,tree_object,
gammaStat)
EpisodicBD_gammaPPDI <- quantile(EpisodicBD_ppt[[1]],prob=c(0.025,0.975))
pdf(paste(out_dir,"/",dataset,"/","plot_PPD_",tree,"_PPD_samplesEpisodicBD.pdf", sep=""),height=6,width=18)
par(mfrow=c(1,3))
plot(density(numTaxaEpisodicBD),main="Number of taxa",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=numTaxaPPDI_EpisodicBD,lty=2,col="gray",lwd=2) +
points(tree_object$Nnode+1,0,pch="x") + title(sub = "(A)", xlab = "Frequency")
ltt.plot(treesEpisodicBD[[1]],backward=FALSE,col="gray",log="y",
ylim=c(1,max(200)),main="LTT-plot") + ltt.lines(tree_object,backward=FALSE,lwd=3) +
for (i in 2:min(100,length(treesEpisodicBD))) ltt.lines(treesEpisodicBD[[i]], backward=FALSE, col="gray") + title(sub = "(B)")
plot(density(ppt[[1]]),main="Gamma Statistic",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=EpisodicBD_gammaPPDI,lty=2,col="gray",lwd=2) +
points(observedGamma,0,pch="x") + title(sub = "(C)", xlab = "Gamma Value")
dev.off()
simEpisodicBD
samplesEpisodicBD
treesEpisodicBD <- tess.PosteriorPrediction(simEpisodicBD,samplesEpisodicBD)
tmrca <- max( times )
simMassExtinctionBD <- function(params) {
MassExtinctionBD_speciation <- params[1]+params[2]
MassExtinctionBD_extinction <- params[2]
MassExtinctionBD_time <- params[3]
repeat {
MassExtinctionBD_tree <- tess.sim.age(n = 1,
age = tmrca,
lambda = MassExtinctionBD_speciation,
mu = MassExtinctionBD_extinction,
samplingProbability = 1.0,
MRCA = TRUE)[[1]]
if (MassExtinctionBD_tree$Nnode > 1) break }
return (MassExtinctionBD_tree) }
treesMassExtinctionBD <- tess.PosteriorPrediction(simMassExtinctionBD,samplesMassExtinctionBD)
# compute the number of species in each simulate MassExtinctionBD_tree
numTaxaMassExtinctionBD <- c()
for (i in 1:length(treesMassExtinctionBD)){
numTaxaMassExtinctionBD[i] <- treesMassExtinctionBD[[i]]$Nnode + 1 }
numTaxaPPDI_MassExtinctionBD <- quantile(numTaxaMassExtinctionBD,prob=c(0.025,0.975))
observedGamma <- gammaStat(tree_object)
MassExtinctionBD_ppt <- tess.PosteriorPredictiveTest(treesMassExtinctionBD,tree_object,
gammaStat)
MassExtinctionBD_gammaPPDI <- quantile(MassExtinctionBD_ppt[[1]],prob=c(0.025,0.975))
pdf(paste(out_dir,"/",dataset,"/","plot_PPD_",tree,"_PPD_samplesMassExtinctionBD.pdf", sep=""),height=6,width=18)
par(mfrow=c(1,3))
plot(density(numTaxaMassExtinctionBD),main="Number of taxa",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=numTaxaPPDI_MassExtinctionBD,lty=2,col="gray",lwd=2) +
points(tree_object$Nnode+1,0,pch="x") + title(sub = "(A)", xlab = "Frequency")
ltt.plot(treesMassExtinctionBD[[1]],backward=FALSE,col="gray",log="y",
ylim=c(1,max(200)),main="LTT-plot") + ltt.lines(tree_object,backward=FALSE,lwd=3) +
for (i in 2:min(100,length(treesMassExtinctionBD))) ltt.lines(treesMassExtinctionBD[[i]], backward=FALSE, col="gray") + title(sub = "(B)")
plot(density(ppt[[1]]),main="Gamma Statistic",xlab="",
ylab="Posterior Predictive Density",lwd=2) + abline(v=MassExtinctionBD_gammaPPDI,lty=2,col="gray",lwd=2) +
points(observedGamma,0,pch="x") + title(sub = "(C)", xlab = "Gamma Value")
dev.off()
MassExtinctionBD_tree
simMassExtinctionBD <- function(params) {
MassExtinctionBD_speciation <- params[1]+params[2]
MassExtinctionBD_extinction <- params[2]
MassExtinctionBD_time <- params[3]
repeat {
MassExtinctionBD_tree <- tess.sim.age(n = 1,
age = tmrca,
lambda = MassExtinctionBD_speciation,
mu = MassExtinctionBD_extinction,
samplingProbability = 1.0,
MRCA = TRUE)[[1]]
if (MassExtinctionBD_tree$Nnode > 1) break }
return (MassExtinctionBD_tree) }
MassExtinctionBD_tree
simMassExtinctionBD <- function(params) {
MassExtinctionBD_speciation <- params[1]+params[2]
MassExtinctionBD_extinction <- params[2]
MassExtinctionBD_time <- params[3]
repeat {
MassExtinctionBD_tree <- tess.sim.age(n = 1,
age = tmrca,
lambda = MassExtinctionBD_speciation,
mu = MassExtinctionBD_extinction,
samplingProbability = 1.0,
MRCA = TRUE)[[1]]
if (MassExtinctionBD_tree$Nnode > 1) break }
return (MassExtinctionBD_tree) }
simMassExtinctionBD
treesMassExtinctionBD <- tess.PosteriorPrediction(simMassExtinctionBD,samplesMassExtinctionBD)
View(treesMassExtinctionBD)
paste(out_dir,"/",dataset,"/","BF_",tree,"ML_GRID",sep="")
write.csv(marginalLikelihoodGrid, file = paste(out_dir,"/",dataset,"/","BF_",tree,"ML_GRID",sep=""),row.names = F,sep = "\t")
write.csv(marginalLikelihoodGrid, file = paste(out_dir,"/",dataset,"/","BF_",tree,"ML_GRID",sep=""),row.names = F)
mean(EpisodicBD_ppt[[1]] >= observedGamma)
EpisodicBD_ppt
EpisodicBD_ppt[[1]] >= observedGamma
EpisodicBD_ppt
EpisodicBD_ppt[[1]]
observedGamma
EpisodicBD_ppt[[1]] >= observedGamma
mean(EpisodicBD_ppt[[1]] > observedGamma)
mean(EpisodicBD_ppt[[1]])
mean(EpisodicBD_ppt[[i]]) >= observedGamma
apply(mean(EpisodicBD_ppt[[1]]) >= observedGamma)
EpisodicBD_gammaPPDI
EpisodicBD_ppt
EpisodicBD_ppt
EpisodicBD_ppt[[1]]
numTaxaPPDI_ConstBD
numTaxaConstBD
numTaxaConstBD
times
times
as.numeric(branching.times(tree_object))
rateChangeTime
summary(samplesMassExtinctionBD)
print(summary(samplesMassExtinctionBD))
print(summary(samplesConstBD))
print(summary(samplesDecrBD))
marginalLikelihoodMassExtinctionBD
marginalLikelihoodConstBD
numTaxaPPDI_ConstBD
numTaxaConstBD
numTaxaPPDI_ConstBD
print(mean(numTaxaConstBD)
print(mean(numTaxaConstBD))
print(observedGamma)
ConstBD_ppt
ConstBD_gammaPPDI
print(ConstBD_ppt)
print(mean(ConstBD_ppt))
print(mean(ConstBD_ppt))
ConstBD_ppt
print(mean(ConstBD_ppt[[1]]))
ConstBD_gammaPPDI
print(ConstBD_gammaPPDI)
numTaxaConstBD
print(mean(numTaxaConstBD))
numTaxaPPDI_ConstBD
numTaxaPPDI_ConstBD
numTaxaConstBD
print(mean(numTaxaConstBD))
numTaxaPPDI_ConstBD
print(paste("numTaxaConstBD",mean(numTaxaConstBD),sep=""))
print(paste("numTaxaConstBD",mean(numTaxaConstBD),"=",sep=""))
print(paste("numTaxaConstBD","=",mean(numTaxaConstBD),sep=""))
print(paste("numTaxaConstBD","=",mean(numTaxaConstBD),sep=" "))
print(paste("numTaxaPPDI_ConstBD","=",numTaxaPPDI_ConstBD,sep = " "))
numTaxaPPDI_ConstBD
numTaxaPPDI_ConstBD
print(paste("numTaxaPPDI_ConstBD","=",numTaxaPPDI_ConstBD,sep = " ")
print(paste("numTaxaPPDI_ConstBD","=",numTaxaPPDI_ConstBD,sep = " "))
numTaxaPPDI_ConstBD
observedGamma
print(paste("Observed Gamma","_",tree_object," ",observedGamma,sep = ""))
observedGamma
tree_object
print(paste("Observed Gamma","_",tree," ",observedGamma,sep = ""))
print(paste("Observed_Gamma","_",tree," ","=",observedGamma,sep = ""))
ConstBD_ppt
print(mean(ConstBD_ppt[[1]]))
print(summary(samplesMassExtinctionBD))
print(paste("samplesEpisodicBD","_",tree,"=",summary(samplesEpisodicBD),sep = ""))
paste("samplesEpisodicBD","_",tree,"=",sep = ""))
paste("samplesEpisodicBD","_",tree,"=",sep = "")
print(paste("samplesEpisodicBD","_",tree,"=",sep = ""))
print(paste("samplesEpisodicBD","_",tree,"=",sep = ""))
print(summary(samplesEpisodicBD))
print(paste("samplesConstBD","_",tree,"=",sep = ""))
print(summary(samplesConstBD))
print(paste("samplesConstBD","_",tree,"=",sep = "")) %>% print(summary(samplesConstBD))
print(paste("samplesDecrBD","_",tree,"=",sep = ""))
print(summary(samplesDecrBD))
print(summary(samplesMassExtinctionBD))
print(paste("samplesMassExtinctionBD","_",tree,"=",sep = ""))
print(summary(samplesMassExtinctionBD))
print(paste("numTaxaConstBD","=",mean(numTaxaConstBD),sep=" "))
print(paste("numTaxaPPDI_ConstBD","=",numTaxaPPDI_ConstBD,sep = " "))
print(paste("Observed_Gamma","_",tree," ","=",observedGamma,sep = ""))
ConstBD_ppt
print(paste("ConstBD_ppt",)mean(ConstBD_ppt[[1]]))
print(paste("ConstBD_ppt",mean(ConstBD_ppt[[1]])))
ConstBD_gammaPPDI
ConstBD_gammaPPDI
print(paste("ConstBD_ppt","="mean(ConstBD_ppt[[1]])))
print(paste("ConstBD_ppt",tree,"=",mean(ConstBD_ppt[[1]])))
print(paste("ConstBD_ppt","_"tree,"=",mean(ConstBD_ppt[[1]])))
print(paste("ConstBD_ppt","_",tree,"=",mean(ConstBD_ppt[[1]])))
print(paste("ConstBD_ppt","_",tree,"=",mean(ConstBD_ppt[[1]]),sep = ""))
ConstBD_gammaPPDI
print(paste("ConstBD_gammaPPDI",tree,"=",ConstBD_gammaPPDI,sep = ""))
ConstBD_gammaPPDI
print(paste("ConstBD_gammaPPDI",tree,"=",ConstBD_gammaPPDI,sep = ""))
numTaxaDecrBD
numTaxaPPDI_DecrBD
print(paste("numTaxaDecrBD","_",tree,numTaxaDecrBD,sep = ""))
numTaxaDecrBD
print(paste("numTaxaDecrBD","_",tree,mean(numTaxaDecrBD),sep = ""))
print(paste("numTaxaDecrBD","_",tree,"=",mean(numTaxaDecrBD),sep = ""))
print(paste("numTaxaConstBD","=",mean(numTaxaConstBD),sep=" "))
print(paste("numTaxaConstBD",tree,"=",mean(numTaxaConstBD),sep=" "))
print(paste("numTaxaPPDI_ConstBD","=",numTaxaPPDI_ConstBD,sep = " "))
print(paste("numTaxaPPDI_ConstBD",tree,"=",numTaxaPPDI_ConstBD,sep = " "))
print(paste("Observed_Gamma","_",tree," ","=",observedGamma,sep = ""))
print(paste("ConstBD_ppt","_",tree,"=",mean(ConstBD_ppt[[1]]),sep = ""))
print(paste("ConstBD_gammaPPDI",tree,"=",ConstBD_gammaPPDI,sep = ""))
print(paste("numTaxaDecrBD","_",tree,"=",mean(numTaxaDecrBD),sep = ""))
DecrBD_ppt
print(paste("DecrBD_ppt","_",tree,"=",mean(DecrBD_ppt[[1]]),sep = ""))
print(paste("DecrBD_gammaPPDI",tree,"=",DecrBD_gammaPPDI,sep = ""))
print(paste("DecrBD_ppt","_",tree,"=",mean(DecrBD_ppt[[1]]),sep = ""))
print(paste("DecrBD_gammaPPDI",tree,"=",DecrBD_gammaPPDI,sep = ""))
print(paste("numTaxaPPDI_EpisodicBD","_",tree,"=",mean(numTaxaPPDI_EpisodicBD),sep = ""))
print(paste("EpisodicBD_ppt","_",tree,"=",mean(EpisodicBD_ppt[[1]]),sep = ""))
print(paste("EpisodicBD_gammaPPDI",tree,"=",EpisodicBD_gammaPPDI,sep = ""))
ltt.lines(tree_object,backward=FALSE,lwd=3)
numTaxaPPDI_DecrBD
print(paste("numTaxaDecrBD","_",tree,"=",mean(numTaxaDecrBD),sep = ""))
print(paste("numTaxaPPDI_DecrBD",tree,"=",numTaxaPPDI_DecrBD,sep = " "))
print(paste("numTaxaPPDI_EpisodicBD","_",tree,"=",mean(numTaxaPPDI_EpisodicBD),sep = ""))
print(paste("numTaxaPPDI_EpisodicBD",tree,"=",numTaxaPPDI_EpisodicBD,sep = " "))
print(paste("numTaxaPPDI_EpisodicBD","_",tree,"=",mean(numTaxaPPDI_EpisodicBD),sep = ""))
print(paste("numTaxaPPDI_EpisodicBD",tree,"=",numTaxaPPDI_EpisodicBD,sep = " "))
tmrca
tree_object
print(paste("numTaxaEpisodicBD","_",tree,"=",mean(numTaxaEpisodicBD),sep = ""))
numTaxaPPDI_EpisodicBD
numTaxaPPDI_EpisodicBD
print(paste("numTaxaPPDI_EpisodicBD",tree,"=",numTaxaPPDI_EpisodicBD,sep = " "))
EpisodicBD_ppt
print(paste("EpisodicBD_ppt","_",tree,"=",mean(EpisodicBD_ppt[[1]]),sep = ""))
EpisodicBD_gammaPPDI <- quantile(EpisodicBD_ppt[[1]],prob=c(0.025,0.975))
EpisodicBD_gammaPPDI
print(paste("EpisodicBD_gammaPPDI",tree,"=",EpisodicBD_gammaPPDI,sep = ""))
mean(EpisodicBD_ppt[[1]]) >= observedGamma
mean(EpisodicBD_ppt[[1]] >= observedGamma)
mean(EpisodicBD_ppt[[1]])
observedGamma
mean(EpisodicBD_ppt[[1]] >= observedGamma)
print(paste("EpisodicBD_ppt","_",tree,"=",mean(EpisodicBD_ppt[[1]]),sep = ""))
print(paste("numTaxaPPDI_EpisodicBD",tree,"=",numTaxaPPDI_EpisodicBD,sep = " "))
print(paste("numTaxaPPDI_EpisodicBD",tree,"=",numTaxaPPDI_EpisodicBD,sep = ""))
print(paste("numTaxaPPDI_DecrBD",tree,"=",numTaxaPPDI_DecrBD,sep = ""))
print(paste("numTaxaConstBD",tree,"=",mean(numTaxaConstBD),sep=" "))
print(paste("numTaxaConstBD",tree,"=",mean(numTaxaConstBD),sep=""))
print(paste("numTaxaConstBD","_",tree,"=",mean(numTaxaConstBD),sep=""))
print(paste("numTaxaPPDI_ConstBD",tree,"=",numTaxaPPDI_ConstBD,sep = " "))
print(paste("numTaxaPPDI_ConstBD","_",tree,"=",numTaxaPPDI_ConstBD,sep = ""))
print(paste("Observed_Gamma","_",tree," ","=",observedGamma,sep = ""))
print(paste("ConstBD_ppt","_",tree,"=",mean(ConstBD_ppt[[1]]),sep = ""))
print(paste("ConstBD_gammaPPDI",tree,"=",ConstBD_gammaPPDI,sep = ""))
print(paste("numTaxaDecrBD","_",tree,"=",mean(numTaxaDecrBD),sep = ""))
print(paste("numTaxaDecrBD","_",tree,"=",mean(numTaxaDecrBD),sep = ""))
print(paste("DecrBD_ppt","_",tree,"=",mean(DecrBD_ppt[[1]]),sep = ""))
print(paste("numTaxaEpisodicBD","_",tree,"=",mean(numTaxaEpisodicBD),sep = ""))
print(paste("numTaxaEpisodicBD","_",tree,"=",mean(numTaxaEpisodicBD),sep = ""))
print(paste("numTaxaMassExtinctionBD","_",tree,"=",mean(numTaxaMassExtinctionBD),sep = ""))
print(paste("numTaxaPPDI_MassExtinctionBD",tree,"=",numTaxaPPDI_MassExtinctionBD,sep = ""))
print(paste("MassExtinctionBD_ppt","_",tree,"=",mean(MassExtinctionBD_ppt[[1]]),sep = ""))
print(paste("MassExtinctionBD_ppt","_",tree,"=",mean(MassExtinctionBD_ppt[[1]]),sep = ""))
print(paste("MassExtinctionBD_gammaPPDI",tree,"=",MassExtinctionBD_gammaPPDI,sep = ""))
MassExtinctionBD_ppt
mean(MassExtinctionBD_ppt[[1]])
print(paste("MassExtinctionBD_ppt","_",tree,"=",mean(MassExtinctionBD_ppt[[1]]),sep = ""))
#location
base_dir <- "/Users/eren/Documents/GitHub/Chapter3/"
input_dir <- "/Users/eren/Documents/GitHub/Chapter3/AlexTrees"
library(ape)
library(geiger)
tree_data_sets <- c(list.files(output_dir)) # char or list??
list.files(paste(input_dir,"Dataset1",sep = "/"))
list_dirs(paste(input_dir))
list.dirs(paste(input_dir))
list.dirs(paste(input_dir),recursive = F,full.names = F))
paste(input_dir)
list.dirs(paste(input_dir),recursive = F,full.names = F)
dataset
paste(input_dir,"Dataset1",treefile,sep = "/")
list.files(dataset)
dataset
list.files(paste(input_dir,dataset))
paste(input_dir,dataset)
paste(input_dir,dataset,sep = "/"))
paste(input_dir,dataset,sep = "/")
list.files(paste(input_dir,dataset,sep = "/"))
paste(input_dir,dataset,treefile,sep = "/")
list.files(paste(input_dir,dataset,sep = "/"))
tree_file <- inference_fong_best600.txt.treefile
tree_file <- "inference_fong_best600.txt.treefile"
paste(input_dir,dataset,treefile,sep = "/")
treefile <- "inference_fong_best600.txt.treefile"
paste(input_dir,dataset,treefile,sep = "/")
treeobject <- read.tree(paste(input_dir,dataset,treefile,sep = "/"))
dataset1_outgroup <- 5
test_tree <- read.tree("../AlexTrees/Dataset1/s_tree.trees")
test_tree <- rescale(test_tree, model = c("depth"))
test_tree <- read.tree("../AlexTrees/Dataset1/s_tree.trees")
test_tree1 <- rescale(test_tree, model = c("depth"))
test_tree1 <- geiger::rescale(test_tree, model = c("depth"))
test_tree1 <- geiger::rescaleTree(test_tree, model = c("depth"))
test_tree1 <- geiger::rescaleTree(test_tree, 1)
test_tree1 <- rescale.phylo(test_tree, 1)
test_tree1 <- geiger::rescale(test_tree, model = "depth", 1)
View(test_tree1)
test_tree1[["edge.length"]]
max(test_tree$edge.length)
max(test_tree1$edge.length)
min(test_tree1$edge.length)
min(test_tree$edge.length)
test_tree <- read.tree("../AlexTrees/Dataset1/s_tree.trees")
is.ultrametric(test_tree)
test_tree <- read.tree("../AlexOriginalTrees/Dataset1/s_tree.trees")
is.ultrametric(test_tree)
View(priorsDecrBD)
observedGamma
print(paste("ConstBD_ppt","_",tree,"=",mean(ConstBD_ppt[[1]]),sep = ""))
tree_object <- read.tree("../UltrametricTrees/Dataset1/inference_fong_best600.txt.treefile")
gammaStat(tree_object)
plot(tree_object)
plot(tree_object)
plot(tree_object)
tree_object <- read.tree("../AlexTrees/Dataset1/inferenceTest.treefile")
gammaStat(tree_object)
tree_object <- read.tree("../AlexTrees/Dataset1/inferenceTest.treefile")
gammaStat(tree_object)
is.ultrametric(tree_object)
tree_object <- read.tree("../UltrametricTrees/Dataset1/inferenceTest.treefile")
is.ultrametric(tree_object)
gammaStat(tree_object)
plot(tree_object)
dev.off()
plot(tree_object)
View(test_tree)
tree_object <- read.tree("../../Bird_SISRS/Reference_Trees/JarvisFinalTree.nwk")
is.ultrametric(tree_object)
gammaStat(tree_object)
plot(tree_object)
ConstBD_ppt <- tess.PosteriorPredictiveTest(treesConstBD,tree_object,
onstBD_ppt <- tess.PosteriorPredictiveTest(treesConstBD,tree_object,
gammaStat)
ConstBD_ppt <- tess.PosteriorPredictiveTest(treesConstBD,tree_object,
gammaStat)
ConstBD_ppt
ConstBD_ppt
